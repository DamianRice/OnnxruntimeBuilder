name: android

on:
  workflow_dispatch:
  push:
    tags:
      - '*'

jobs:
  android:
    runs-on: ubuntu-latest

    env:
      ONNX_VERSION: v1.15.1
      PKG_NAME: onnxruntime-1.15.1-android

    steps:
      # Setup JDK 11
      - name: Set up JDK 11
        uses: actions/setup-java@v3
        with:
          java-version: '11'
          distribution: 'adopt'

      # 删除ndk -g参数
      - name: ndk del -g
        run: sed -i -e '/^  -g$/d' $ANDROID_NDK_HOME/build/cmake/android-legacy.toolchain.cmake

      # 检出代码
      - uses: actions/checkout@v3

      # 检出onnxruntime
      - name: checkout onnxruntime
        uses: actions/checkout@v3
        with:
          repository: microsoft/onnxruntime
          path: onnxruntime-${{ env.ONNX_VERSION }}
          ref: ${{ env.ONNX_VERSION }}
          submodules: recursive

      # 复制编译脚本
      - name: copy build script
        run: |
          cp build-onnxruntime-android.sh onnxruntime-${{ env.ONNX_VERSION }}
          cp onnxruntime_cmake_options.txt onnxruntime-${{ env.ONNX_VERSION }}

      # 编译
      - name: build
        run: |
          cd onnxruntime-${{ env.ONNX_VERSION }}
          chmod a+x build-onnxruntime-android.sh
          ./build-onnxruntime-android.sh $ANDROID_NDK_HOME

      # install文件夹改名，并使用7z压缩
      - name: 7zip
        run: |
          mkdir onnxruntime-android
          mv onnxruntime-${{ env.ONNX_VERSION }}/Release_armeabi-v7a/install onnxruntime-android/armeabi-v7a
          mv onnxruntime-${{ env.ONNX_VERSION }}/Release_arm64-v8a/install onnxruntime-android/arm64-v8a
          mv onnxruntime-${{ env.ONNX_VERSION }}/Release_x86/install onnxruntime-android/x86
          mv onnxruntime-${{ env.ONNX_VERSION }}/Release_x86_64/install onnxruntime-android/x86_64
          mv onnxruntime-${{ env.ONNX_VERSION }}/OnnxRuntimeWrapper.cmake onnxruntime-android/OnnxRuntimeWrapper.cmake
          7z a ${{ env.PKG_NAME }}.7z onnxruntime-android

      # 上传artifact
      - name: upload
        uses: actions/upload-artifact@v3
        with:
          name: ${{ env.PKG_NAME }}
          path: ${{ env.PKG_NAME }}.7z

      # 获取所有的git log和tag
      - name: Unshallow
        run: git fetch --prune --unshallow

      # 获取git log 从 previousTag 到 lastTag
      - name: Get git log
        id: git-log
        run: |
          previousTag=$(git describe --abbrev=0 --tags `git rev-list --tags --skip=1 --max-count=1`)
          lastTag=$(git describe --abbrev=0 --tags)
          echo "previousTag:$previousTag ~ lastTag:$lastTag"
          log=$(git log $previousTag..$lastTag --pretty=format:'- %cd %an: %s\n' --date=format:'%Y-%m-%d %H:%M:%S')
          echo "$log"
          echo "log_state="$log"" >> $GITHUB_ENV

      # 创建Changelog文件 triggered by git tag push
      - name: Generate Changelog
        if: startsWith(github.ref, 'refs/tags/')
        run: |
          echo -e '${{ env.log_state }}' > release.md

      # 创建release 上传release
      # https://github.com/marketplace/actions/create-release
      - name: Create release and upload-archive
        uses: ncipollo/release-action@v1
        with:
          prerelease: false
          name: onnxruntime ${{ github.ref }}
          bodyFile: release.md
          artifacts: ${{ env.PKG_NAME }}.7z
          allowUpdates: true
          artifactContentType: application/x-7z-compressed
          token: ${{ secrets.GITHUB_TOKEN }}