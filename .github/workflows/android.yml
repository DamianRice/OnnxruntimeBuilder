name: android

on:
  workflow_dispatch:
  push:
    tags:
      - '*'

jobs:
  android:
    runs-on: ubuntu-latest

    strategy:
      fail-fast: false
      matrix:
        list:
          - { arch: armeabi-v7a, min: 19 }
          - { arch: arm64-v8a, min: 21 }
          - { arch: x86, min: 19 }
          - { arch: x86_64 , min: 21 }

    env:
      ONNX_VERSION: v1.6.0
      PKG_NAME_PREFIX: onnxruntime-1.6.0-${{ matrix.list.arch }}
      BUILD_SCRIPT: build-onnxruntime-1.6.0-android.sh

    steps:
      # Setup JDK 11
      - name: Set up JDK 11
        uses: actions/setup-java@v3
        with:
          java-version: '11'
          distribution: 'adopt'

      # 删除ndk -g参数
      - name: ndk del -g
        run: sed -i -e '/^  -g$/d' $ANDROID_NDK_HOME/build/cmake/android-legacy.toolchain.cmake

      # 检出代码
      - uses: actions/checkout@v3

      # 检出onnxruntime
      - name: checkout onnxruntime
        uses: actions/checkout@v3
        with:
          repository: microsoft/onnxruntime
          path: onnxruntime-${{ env.ONNX_VERSION }}
          ref: ${{ env.ONNX_VERSION }}
          submodules: recursive

      # 复制编译脚本
      - name: copy build script
        run: |
          cp ${{ env.BUILD_SCRIPT }} onnxruntime-${{ env.ONNX_VERSION }}

      # 编译
      - name: build
        run: |
          cd onnxruntime-${{ env.ONNX_VERSION }}
          chmod a+x ${{ env.BUILD_SCRIPT }}
          ./${{ env.BUILD_SCRIPT }} ${{ matrix.list.arch }} ${{ matrix.list.min }}

      # 7z压缩
      - name: 7zip
        run: |
          mv onnxruntime-${{ env.ONNX_VERSION }}/build-android-${{ matrix.list.arch }}/Release/install ${{ matrix.list.arch }}
          7z a ${{ env.PKG_NAME_PREFIX }}-shared.7z ${{ matrix.list.arch }}
          rm -r -f ${{ matrix.list.arch }}
          mv onnxruntime-${{ env.ONNX_VERSION }}/build-android-${{ matrix.list.arch }}/Release/install-static ${{ matrix.list.arch }}
          7z a ${{ env.PKG_NAME_PREFIX }}-static.7z ${{ matrix.list.arch }}
          rm -r -f ${{ matrix.list.arch }}

      # 上传artifact
      - name: upload
        uses: actions/upload-artifact@v3
        with:
          name: ${{ env.PKG_NAME_PREFIX }}-shared
          path: ${{ env.PKG_NAME_PREFIX }}-shared.7z

      - name: upload
        uses: actions/upload-artifact@v3
        with:
          name: ${{ env.PKG_NAME_PREFIX }}-static
          path: ${{ env.PKG_NAME_PREFIX }}-static.7z

  release:
    needs: [ android ]

    runs-on: ubuntu-latest

    env:
      ONNX_VERSION: v1.6.0
      PKG_NAME: onnxruntime-1.6.0-android

    steps:
      # 检出代码
      - uses: actions/checkout@v3

      # 获取所有的git log和tag
      - name: Unshallow
        run: git fetch --prune --unshallow

      # 获取git log 从 previousTag 到 lastTag
      - name: Get git log
        id: git-log
        run: |
          previousTag=$(git describe --abbrev=0 --tags `git rev-list --tags --skip=1 --max-count=1`)
          lastTag=$(git describe --abbrev=0 --tags)
          echo "previousTag:$previousTag ~ lastTag:$lastTag"
          log=$(git log $previousTag..$lastTag --pretty=format:'- %cd %an: %s\n' --date=format:'%Y-%m-%d %H:%M:%S')
          echo "$log"
          echo "log_state="$log"" >> $GITHUB_ENV

      # 创建Changelog文件 triggered by git tag push
      - name: Generate Changelog
        if: startsWith(github.ref, 'refs/tags/')
        run: |
          echo -e '${{ env.log_state }}' > release.md

      # 下载artifact
      - name: download
        uses: actions/download-artifact@v3
        with:
          path: artifacts

      # 查看artifact
      - name: list artifact
        run: |
          tree artifacts

      # 合并
      - name: merge
        run: |
          mkdir onnxruntime-android
          mv artifacts/*/*-shared.7z artifacts/
          find artifacts/*-shared.7z -exec 7z x {} -aoa -oonnxruntime-android \;
          pushd onnxruntime-android
          echo "message(\"OnnxRuntime Path: \${CMAKE_CURRENT_LIST_DIR}/\${ANDROID_ABI}\")" > OnnxRuntimeWrapper.cmake
          echo "set(OnnxRuntime_DIR \"\${CMAKE_CURRENT_LIST_DIR}/\${ANDROID_ABI}\")" >> OnnxRuntimeWrapper.cmake
          popd
          7z a ${{ env.PKG_NAME }}-shared.7z onnxruntime-android
          rm -r -f onnxruntime-android
          mkdir onnxruntime-android
          mv artifacts/*/*-static.7z artifacts/
          find artifacts/*-static.7z -exec 7z x {} -aoa -oonnxruntime-android \;
          pushd onnxruntime-android
          echo "message(\"OnnxRuntime Path: \${CMAKE_CURRENT_LIST_DIR}/\${ANDROID_ABI}\")" > OnnxRuntimeWrapper.cmake
          echo "set(OnnxRuntime_DIR \"\${CMAKE_CURRENT_LIST_DIR}/\${ANDROID_ABI}\")" >> OnnxRuntimeWrapper.cmake
          popd
          7z a ${{ env.PKG_NAME }}-static.7z onnxruntime-android
          rm -r -f onnxruntime-android
          find artifacts/*-static.7z -exec rm {} \;

      # 创建release 上传release
      # https://github.com/marketplace/actions/create-release
      - name: Create release and upload-archive
        uses: ncipollo/release-action@v1
        with:
          prerelease: false
          bodyFile: release.md
          artifacts: ${{ env.PKG_NAME }}-shared.7z,${{ env.PKG_NAME }}-static.7z
          allowUpdates: true
          artifactContentType: application/x-7z-compressed
          token: ${{ secrets.GITHUB_TOKEN }}
